stages:
  - prepare
  - build
  - package

variables:
  MOZCONFIG: "$CI_PROJECT_DIR/mozconfig/release.mozconfig"
  CCACHE_DIR: "$CI_PROJECT_DIR/.ccache"
  RUSTC_WRAPPER: "sccache"

cache:
  key: ccache
  paths:
    - .ccache/

default:
  # Since the runner is Arch, no need for Debian image
  tags:
    - archlinux
    - firefox
    - acreetionfox

before_script:
  # Install build dependencies on Arch
  - sudo pacman -Syu --noconfirm
  - sudo pacman -S --noconfirm git base-devel python python-pip nodejs npm yasm \
    clang llvm lld gtk3 dbus-glib libxt pulseaudio alsa-lib libx11 libxcomposite \
    libxdamage libxrandr libxi freetype2 fontconfig glib2 pango cairo ccache sccache unzip zip

prepare:
  stage: prepare
  script:
    - bash bootstrap_fork.sh
  artifacts:
    paths:
      - upstream
      - mozconfig
      - patches
      - policies
      - browser/branding
    expire_in: 1 week

build:
  stage: build
  script:
    - cd upstream
    - git checkout main
    - cd ..
    - git apply patches/*.patch || true
    - ./upstream/mach bootstrap --application-choice browser --no-interactive
    - ./upstream/mach build -v
  artifacts:
    paths:
      - upstream/obj-*/dist/bin/
    expire_in: 1 week

package:
  stage: package
  script:
    - cd upstream/obj-*/dist
    - tar -czf $CI_PROJECT_DIR/${CI_PROJECT_NAME}-linux.tar.gz bin/*
  artifacts:
    paths:
      - "${CI_PROJECT_NAME}-linux.tar.gz"
    expire_in: 2 weeks
